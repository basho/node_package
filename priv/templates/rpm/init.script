#!/bin/bash
#
# {{package_name}}
#
# chkconfig: 2345 80 30
# description: {{package_shortdesc}}
# processname: beam
# config: /etc/{{package_install_name}}/app.config
# config: /etc/{{package_install_name}}/vm.args
#

# Source function library.
. /etc/rc.d/init.d/functions

RETVAL=0
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="{{package_shortdesc}}"
NAME={{package_install_name}}
DAEMON=/usr/{{bin_or_sbin}}/$NAME

# Check for script, config and data dirs
[ -x /usr/{{bin_or_sbin}}/$NAME ] || exit 0
[ -d /etc/$NAME ] || exit 0
[ -d /var/lib/$NAME ] || exit 0
[ -d /var/run/$NAME ] || exit 0


start() {
        # Start daemons.
        echo -n $"Starting {{package_install_name}}: "
        su - {{package_install_user}} -c "$DAEMON start" && success || failure $"$NAME start"
        RETVAL=$?
        [ $RETVAL -eq 0 ]
        echo
        return $RETVAL
}

stop() {
        # Stop daemon.
        echo -n $"Stopping {{package_install_name}}: "
        $DAEMON stop 2>/dev/null 1>&2
        sleep 2
        # Check if the process is still running, muting output of getpid
        MUTE=`$DAEMON getpid`
        [ "$?" -ne 0 ] && success && echo && return 0 || failure $"$NAME stop"
        sleep 10
        MUTE=`$DAEMON getpid`
        [ "$?" -ne 0] && success && echo && return 0 || failure $"$NAME failed to stop"
        echo
        return 1

}

status() {
        # Check status of daemon
        $DAEMON ping && success && echo $"$NAME is running..." && return 0 || failure $"$NAME is stopped"
        return 2
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        stop
        start
        ;;
  ping)
        $DAEMON ping || exit $?
        ;;
  status)
        status && exit 0 || exit $?
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|ping|status}"
        exit 1
esac

exit $?
