# _revision, _release, and _version should be defined on the rpmbuild command
# line like so:
#
# --define "_version 0.9.1.19.abcdef" --define "_release 7" \
# --define "_revision 0.9.1-19-abcdef"

Name: {{package_name}}
Version: %{_version}
Release: %{_release}%{?dist}
License: {{license_type}}
Group: Development/Libraries
Source: %{_tarname}
URL: {{vendor_url}}
Vendor: {{vendor_name}}
Packager: {{vendor_contact_name}} <{{vendor_contact_email}}>
BuildRoot: %{_tmppath}/%{name}-%{_revision}-%{release}-root
Summary: {{package_shortdesc}}
Obsoletes: {{package_name}}

%description
{{package_desc}}

%define init_script %{_sysconfdir}/init.d/{{package_install_name}}
%define debug_package %{nil}
%define __prelink_undo_cmd /bin/cat prelink library

%define platform_bin_dir %{_{{bin_or_sbin}}dir}
%define platform_data_dir %{_localstatedir}/lib/{{package_install_name}}
%define platform_etc_dir %{_sysconfdir}/{{package_install_name}}
%define platform_base_dir %{_libdir}/{{package_install_name}}
%define platform_lib_dir %{platform_base_dir}/lib
%define platform_log_dir %{_localstatedir}/log/{{package_install_name}}


# Setup vars.config like other platforms, but do it inside of spec file
%prep
%setup -q -n {{package_name}}-%{_revision}
cat > rpm.vars.config <<EOF
%% Platform-specific installation paths
{platform_bin_dir,  "%{platform_bin_dir}"}.
{platform_data_dir, "%{platform_data_dir}"}.
{platform_etc_dir,  "%{platform_etc_dir}"}.
{platform_base_dir, "%{platform_base_dir}"}.
{platform_lib_dir,  "%{platform_lib_dir}"}.
{platform_log_dir,  "%{platform_log_dir}"}.

{runner_script_dir, "%{platform_bin_dir}"}.
{runner_base_dir,   "%{platform_base_dir}"}.
{runner_etc_dir,    "%{platform_etc_dir}"}.
{runner_log_dir,    "%{platform_log_dir}"}.
{runner_lib_dir,    "%{platform_lib_dir}"}.
{runner_patch_dir,  "%{platform_lib_dir}/{{package_patch_dir}}"}.
{runner_user,       "{{package_install_user}}"}.
{pipe_dir,          "%{_localstatedir}/run/{{package_install_name}}/"}.
{app_version,       "%{_revision}"}.
EOF

%build
OVERLAY_VARS="overlay_vars=../rpm.vars.config" make rel

%install
%define relpath       %{_builddir}/%{buildsubdir}/rel/{{package_install_name}}
%define buildroot_lib %{buildroot}%{_libdir}/{{package_install_name}}
%define buildroot_etc %{buildroot}%{_sysconfdir}/{{package_install_name}}

mkdir -p %{buildroot_etc}
mkdir -p %{buildroot_lib}
mkdir -p %{buildroot}%{_localstatedir}/lib/{{package_install_name}}
mkdir -p %{buildroot}%{_localstatedir}/log/{{package_install_name}}
mkdir -p %{buildroot}%{_localstatedir}/run/{{package_install_name}}

cp -R %{relpath}/lib       %{buildroot_lib}
cp -R %{relpath}/erts-*    %{buildroot_lib}
cp -R %{relpath}/releases  %{buildroot_lib}

mkdir -p %{buildroot}%{_{{bin_or_sbin}}dir}
if [ -d %{relpath}/bin ]; then \
   find %{relpath}/bin -type f \
        -exec install -p -D -m 0755 {} %{buildroot}%{_{{bin_or_sbin}}dir}/ \; ;fi

mkdir -p %{buildroot}%{_mandir}/man1
if [ -d %{_builddir}/%{buildsubdir}/doc/man/man1 ]; then \
   {{#package_commands}}if [ -f %{_builddir}/%{buildsubdir}/doc/man/man1/{{name}}.1.gz ]; then \
                            install -p -D -m 0455 %{_builddir}/%{buildsubdir}/doc/man/man1/{{name}}.1.gz \
                                    %{buildroot}%{_mandir}/man1 \
                        ; fi && \
   {{/package_commands}}echo -n; fi

cp -R %{relpath}/etc/* %{buildroot_etc}

mkdir -p %{buildroot}%{_localstatedir}/lib/{{package_install_name}}
cp -R %{relpath}/data/* \
      %{buildroot}%{_localstatedir}/lib/{{package_install_name}}

mkdir -p %{buildroot}%{_sysconfdir}/init.d
install -m755 %{_topdir}/init.script  %{buildroot}%{_sysconfdir}/init.d/{{package_install_name}}


# Needed to work around check-rpaths which seems to be hardcoded into recent
# RPM releases
export QA_RPATHS=3


%pre
if ! getent group {{package_install_group}} >/dev/null 2>&1; then
   groupadd -r {{package_install_group}}
fi

if getent passwd {{package_install_user}} >/dev/null 2>&1; then
   usermod -d %{_localstatedir}/lib/{{package_install_name}} {{package_install_user}} || true
else
   useradd -r -g {{package_install_group}} \
           --home %{_localstatedir}/lib/{{package_install_name}} \
           --comment "{{package_install_user_desc}}" \
           {{package_install_user}}
fi

%post
# Fixup perms for SELinux (if it is enabled)
selinuxenabled && find %{_localstatedir}/lib/{{package_install_name}} -name "*.so" -exec chcon -t textrel_shlib_t {} \;

# Make sure shell library file is readable
chmod 0755 %{_libdir}/{{package_install_name}}/lib/env.sh


%files
%defattr(-,{{package_install_user}},{{package_install_group}})
%{_libdir}/*
%dir %{_sysconfdir}/{{package_install_name}}
%config(noreplace) %{_sysconfdir}/{{package_install_name}}/*
%{_{{bin_or_sbin}}dir}/*
%{_localstatedir}/lib/{{package_install_name}}
%{_localstatedir}/log/{{package_install_name}}
%{_localstatedir}/run/{{package_install_name}}
%{_sysconfdir}/init.d/{{package_install_name}}
%{_mandir}/man1/*

%clean
rm -rf %{buildroot}
